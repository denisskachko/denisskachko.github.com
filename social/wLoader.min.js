(function(g, f, e) {
    var a;
    if (f.jQuery === e || f.jQuery.fn.jquery !== "1.11.3") {
        var c = document.createElement("script");
        c.setAttribute("type", "text/javascript");
        c.setAttribute("src", "jquery-1.11.3.min.js");
        if (c.readyState) {
            c.onreadystatechange = function() {
                if (this.readyState == "complete" || this.readyState == "loaded") {
                    d();
                }
            };
        } else {
            c.onload = d;
        }(document.getElementsByTagName("head")[0] || document.documentElement).appendChild(c);
    } else {
        a = f.jQuery;
        b(a);
    }

    function d() {
        a = f.jQuery.noConflict(true);
        b(a);
    }

    function b(h) {
        f.zs = f.zs || {};
        f.zs.jQuery = h;
        (function(s, r, i, q) {
            s = f.zs = g || {};
            f.zs.jQuery = i;
            var l = s.debug = false;
            s.widget = s.widget || {};
            s.errorContainer = s.errorContainer || {};
            s.step1 = s.step1 || {};
            s.step2 = s.step2 || {};
            s.step3 = s.step3 || {};
            s.step4 = s.step4 || {};
            s.showLoaderWidget = function() {
                i(".z-widget-preloader.z-preloader").show();
            };
            s.hideLoaderWidget = function() {
                i(".z-widget-preloader.z-preloader").hide();
            };
            s.showLoader = function() {
                i(".z-catalog-preloader.z-preloader").show();
                i(".z-admin-preloader.z-preloader").show();
            };
            s.hideLoader = function() {
                i(".z-catalog-preloader.z-preloader").hide();
                i(".z-admin-preloader.z-preloader").hide();
            };
            s.getResourceServerPath = function n() {
                return s.published ? s.productionResourcePath : s.devResourcePath;
            };
            s.getAppServerUrl = function m() {
                return s.published ? s.productionAppServerUrl : s.devAppSercerUrl;
            };

            function o() {
                if (a(s.containerSelector).length == 0) {
                    a('<div id="zaprosWidgetContainer"></div>').appendTo("body");
                }
            }

            function j(w) {
                var t = escape(w);
                if (!f.document.getElementById(t)) {
                    var u = f.document.getElementsByTagName("head")[0];
                    var v = f.document.createElement("link");
                    v.id = t;
                    v.rel = "stylesheet";
                    v.type = "text/css";
                    v.href = w;
                    v.media = "all";
                    u.appendChild(v);
                }
            }

            function k(u) {
                var t = escape(u);
                if (!f.document.getElementById(t)) {
                    var v = document.createElement("script");
                    v.setAttribute("type", "text/javascript");
                    v.setAttribute("id", t);
                    v.setAttribute("src", u);
                    (document.getElementsByTagName("head")[0] || document.documentElement).appendChild(v);
                }
            }
            s.infoErrorMsg = function(v, t, u) {
                return this.informationMessage(v, "alert", false, t, u);
            };
            s.infoSuccessMsg = function(v, t, u) {
                return this.informationMessage(v, "success", false, t, u);
            };
            s.informationMessage = function(z, u, x, v, w) {
                if (!v) {
                    if (i("#message").length === 0) {
                        i("<div id='message'></div>").appendTo("#containerContent");
                    }
                    var t = i("#message");
                    v = t.fadeIn();
                } else {
                    v.fadeIn(3000);
                    v.empty();
                }
                if (w) {
                    v.fadeOut(3000);
                    return;
                }
                x = x || false;
                var y;
                if (x) {
                    y = v.append('<div class="alert-box ' + u + ' ">' + z + '<a href="" class="close">&times;</a></div>');
                } else {
                    y = v.html('<div class="alert-box ' + u + ' ">' + z + '<a href="" class="close">&times;</a></div>');
                }
                return y;
            };
            s.widgetSuccessMsg = function(t) {
                s.infoSuccessMsg(t, i(f.zs.errorContainer));
            };
            s.widgetErrorMsg = function(t) {
                s.infoErrorMsg(t, i(f.zs.errorContainer));
            };
            s.LoadScripts = function() {
                var u = ["GlobalWidget.js", "widgetController.js"];
                for (var t = u.length - 1; t >= 0; t--) {
                    k(u[t]);
                }
            };
            s.LoadCSS = function() {
                var t = ["widget.css"];
                for (var u = t.length - 1; u >= 0; u--) {
                    j(t[u]);
                }
            };
            s.LoadStep1Services = function(t) {
                i(function() {
                    if (l) {
                        f.location = s.getAppServerUrl() + "Wizard/Step1LoadServices?providerId=" + t;
                    } else {
                        i.ajax({
                            url: s.getAppServerUrl() + "Wizard/Step1LoadServicesJsonP?jsoncallBack=?",
                            data: {
                                providerId: t
                            },
                            type: "GET",
                            dataType: "jsonp",
                            jsonpCallback: "jsoncallBack",
                            success: function(u) {
                                i(s.servicesContentSelector).html(u.Html);
                            },
                            error: s.error
                        });
                    }
                });
            };
            s.ajaxCache = {};
            s.LoadStep0 = function(u) {
                var t = "stepNumber0";
                return i.ajax({
                    url: s.getAppServerUrl() + "Wizard/Step0JsonP?useMaster=true&jsoncallBack=",
                    type: "GET",
                    cache: true,
                    dataType: "jsonp",
                    jsonpCallback: "jsoncallBack",
                    success: function(v) {
                        s.widgetContainer[t] = v.Html;
                    },
                    error: s.error
                });
            };
            s.LoadStep1 = function(u) {
                u.useMaster = true;
                var t = s.providerId + "stepNumber1";
                if (l) {
                    f.location = s.getAppServerUrl() + "Wizard/Step1?providerId=" + providerId;
                } else {
                    if (!s.ajaxCache[t]) {
                        s.ajaxCache[t] = i.ajax({
                            url: s.getAppServerUrl() + "Wizard/Step1JsonP?jsoncallBack=?",
                            data: {
                                providerId: s.providerId,
                                useMaster: u.useMaster
                            },
                            type: "GET",
                            cache: true,
                            dataType: "jsonp",
                            jsonpCallback: "jsoncallBack",
                            success: function(v) {
                                s.widgetContainer[t] = v.Html;
                            },
                            error: s.error
                        });
                    }
                    s.ajaxCache[t].done(function(v) {
                        s.widgetContainer[t] = v.Html;
                    });
                    return s.ajaxCache[t];
                }
            };
            s.LoadStep2 = function(u) {
                u.useMaster = true;
                if (l) {
                    f.location = s.getAppServerUrl() + "Wizard/Step2?serviceId=" + serviceId;
                } else {
                    var t = i.Callbacks("memory");
                    t.add(s.LoadStep);
                    return a.ajax({
                        url: s.getAppServerUrl() + "Wizard/Step2JsonP?jsoncallBack=?",
                        data: {
                            serviceId: u.serviceId,
                            useMaster: u.useMaster,
                            dayId: u.dayId
                        },
                        type: "GET",
                        dataType: "jsonp",
                        jsonpCallback: "jsoncallBack",
                        success: function(v) {
                            if (v.isSuccessful) {
                                s.widgetContainer[s.providerId + "stepNumber2"] = v.Html;
                            } else {
                                s.widgetErrorMsg("Произошла ошибка. Мы уже о ней знаем и исправляем.");
                            }
                        },
                        error: s.error
                    });
                }
            };
            s.LoadStep2Navigate = function(u) {
                u.useMaster = true;
                if (l) {
                    f.location = s.getAppServerUrl() + "Wizard/Step2Navigate?serviceId=" + serviceId;
                } else {
                    var t = i.Callbacks("memory");
                    t.add(s.LoadStep);
                    return a.ajax({
                        url: s.getAppServerUrl() + "Wizard/Step2NavigateJsonP?jsoncallBack=?",
                        data: {
                            serviceId: u.serviceId,
                            resourceId: u.resourceId,
                            dayId: u.dayId,
                            direction: u.direction,
                            useMaster: u.useMaster
                        },
                        type: "GET",
                        dataType: "jsonp",
                        jsonpCallback: "jsoncallBack",
                        success: function(v) {
                            if (v.isSuccessful) {
                                s.widgetContainer[s.providerId + "stepNumber2"] = v.Html;
                            } else {
                                s.widgetErrorMsg("Произошла ошибка. Мы уже о ней знаем и исправляем.");
                            }
                        },
                        error: s.error
                    });
                }
            };
            s.LoadStep2InitScripts = function() {
                f.zs.step2.checkSelection();
                f.zs.step2.bindClick();
            };
            s.errors = function(t, w, v, u) {
                s.widgetErrorMsg("Ошибка при загрузке");
            };
            s.LoadStep3 = function(t) {
                t.useMaster = true;
                if (l) {
                    f.location = s.getAppServerUrl() + "Wizard/Step3?" + i.param(t);
                    console.log("Executing: window.location = zs.getBaseUrl() + Wizard/Step3? + $.param(params);");
                } else {
                    return i.ajax({
                        url: s.getAppServerUrl() + "Wizard/Step3JsonP?jsoncallBack=?",
                        data: t,
                        type: "GET",
                        dataType: "jsonp",
                        jsonpCallback: "jsoncallBack",
                        success: function(u) {
                            s.widgetContainer[s.providerId + "stepNumber3"] = u.Html;
                        },
                        error: s.error
                    });
                }
            };
            s.LoadStep3InitScritps = function() {
                f.zs.step3.init();
            }, s.LoadStep4 = function(t) {
                t.useMaster = true;
                if (l) {
                    f.location = s.getAppServerUrl() + "Wizard/Step4?requestId=" + t.requestId;
                } else {
                    return i.ajax({
                        url: s.getAppServerUrl() + "Wizard/Step4JsonP?jsoncallBack=?",
                        data: t,
                        type: "GET",
                        dataType: "jsonp",
                        jsonpCallback: "jsoncallBack",
                        success: function(u) {
                            s.widgetContainer[s.providerId + "stepNumber4"] = u.Html;
                        },
                        error: s.error
                    });
                }
            };
            s.LoadStep4InitScripts = function() {
                f.zs.step1.HideStep();
                i(f.zs.step3.zakazSel).hide();
            };
            s.Close = function() {
                i(s.containerSelector).empty();
            };
            s.SendVerificationCode = function(t) {
                s.showLoaderWidget();
                return i.ajax({
                    type: "GET",
                    url: s.getAppServerUrl() + "Wizard/SendVerificationCode?jsoncallBack=?",
                    data: t,
                    dataType: "jsonp",
                    jsonpCallback: "jsoncallBack",
                    success: function(u) {
                        if (u.isSuccessful) {
                            i(f.zs.step3.submitCodeButtonSel).text("Выслать ещё раз");
                        } else {
                            s.widgetErrorMsg(u.errorMessage);
                        }
                        f.zs.step3.bindClick();
                    },
                    error: s.error,
                    complete: function() {
                        s.hideLoaderWidget();
                    }
                });
            };
            var p = false;
            s.Step4Save = function(t) {
                if (p) {
                    return;
                }
                s.showLoaderWidget();
                t.useMaster = true;
                if (l) {
                    i.ajax({
                        type: "POST",
                        url: s.getAppServerUrl() + "Wizard/Step4Save",
                        data: t,
                        dataType: "json",
                        success: function(u) {
                            if (u.isSuccessful) {
                                f.zs.LoadStep4({
                                    stepNumber: 4,
                                    requestId: u.requestId,
                                    providerId: t.providerId
                                });
                            } else {
                                s.widgetErrorMsg(u.errorMessage);
                            }
                            f.zs.step3.bindClick();
                        },
                        error: function() {
                            s.widgetErrorMsg("Ошибка при загрузке");
                        },
                        complete: function() {
                            s.hideLoaderWidget();
                        }
                    });
                } else {
                    i.ajax({
                        type: "GET",
                        url: s.getAppServerUrl() + "Wizard/Step4SaveJsonP?jsoncallBack=?",
                        data: t,
                        dataType: "jsonp",
                        jsonpCallback: "jsoncallBack",
                        beforeSend: function() {
                            p = true;
                        },
                        success: function(u) {
                            if (u.isSuccessful) {
                                f.zs.LoadStep({
                                    stepNumber: 4,
                                    requestId: u.requestId,
                                    providerId: t.providerId
                                });
                            } else {
                                s.widgetErrorMsg(u.errorMessage);
                            }
                            f.zs.step3.bindClick();
                        },
                        error: function(u) {
                            s.widgetErrorMsg("Ошибка при загрузке");
                        },
                        complete: function() {
                            p = false;
                            s.hideLoaderWidget();
                        }
                    });
                }
            };
            s.GetDayToBookByDayId = function(t, u) {
                s.showLoaderWidget();
                if (l) {
                    i.ajax({
                        type: "GET",
                        url: f.zs.getAppServerUrl() + "Wizard/GetDayToBookByDayId",
                        data: u,
                        dataType: "html",
                        success: function(v) {
                            i(t).html(v).fadeIn();
                            f.zs.step2.bindClick();
                        },
                        error: function() {
                            s.widgetErrorMsg("Ошибка при загрузке");
                        },
                        complete: function() {
                            s.hideLoaderWidget();
                        }
                    });
                } else {
                    i.ajax({
                        type: "GET",
                        url: f.zs.getAppServerUrl() + "Wizard/GetDayToBookByDayIdJsonP?jsoncallBack=?",
                        data: u,
                        dataType: "jsonp",
                        jsonpCallback: "jsoncallBack",
                        success: function(v) {
                            i(t).html(v.Html);
                            f.zs.step2.bindClick();
                        },
                        error: function() {
                            s.widgetErrorMsg("Ошибка при загрузке");
                        },
                        complete: function() {
                            s.hideLoaderWidget();
                        }
                    });
                }
            };
            s.GetScrollCalendar = function(t, u) {
                if (l) {
                    i.ajax({
                        type: "GET",
                        url: f.zs.getAppServerUrl() + "Wizard/GetScrollCalendar",
                        data: u,
                        dataType: "html",
                        success: function(v) {
                            t.html(v).fadeIn();
                            f.zs.step2.bindClick();
                        },
                        error: function() {
                            s.widgetErrorMsg("Ошибка при загрузке");
                        }
                    });
                } else {
                    i.ajax({
                        type: "GET",
                        url: f.zs.getAppServerUrl() + "Wizard/GetScrollCalendarJsonP?jsoncallBack=?",
                        data: u,
                        dataType: "jsonp",
                        jsonpCallback: "jsoncallBack",
                        success: function(v) {
                            i(t).html(v.Html);
                            f.zs.step2.bindClick();
                        },
                        error: function() {
                            s.widgetErrorMsg("Ошибка при загрузке");
                        }
                    });
                }
            };
            s.PreLoad = function(t) {
                o();
                s.defaults = {
                    debug: false,
                    providerId: 0,
                    published: false,
                    version: "v1_0",
                    containerSelector: "#zaprosWidgetContainer",
                    errorContainer: ".error-widget-container",
                    contentSelector: ".zr-content",
                    servicesContentSelector: "._servicesContainer",
                    devResourcePath: "//localhost/zapros_static/",
                    productionResourcePath: "//static.zapros.by/",
                    productionAppServerUrl: "//w.zapros.by/",
                    devAppSercerUrl: "//localhost/zapros_widget/",
                    widgetContainer: {},
                    isShowWidget: false
                };
                i.map(__zw, function(v, u) {
                    s.defaults[v[0]] = v[1];
                });
                s = i.extend(s, s.defaults, t);
                s.LoadCSS();
                s.LoadScripts();
            };
            s.LoadInit = function(u) {
                var t = u || {};
                s.PreLoad(t);
                t.isShowWidget = true;
                s.LoadStep(t);
            };
            s.steps = [f.zs.LoadStep0, f.zs.LoadStep1, f.zs.LoadStep2, f.zs.LoadStep3, f.zs.LoadStep4];
            s.stepsScripts = [function() {}, function() {}, f.zs.LoadStep2InitScripts, f.zs.LoadStep3InitScritps, f.zs.LoadStep4InitScripts];
            s.LoadStep = function(w) {
                var x = w.stepNumber || 1;
                if (x == 1) {
                    s.showLoader();
                }
                w.useMaster = true;
                var t = typeof w.isShowWidget !== "undefined" ? w.isShowWidget : true;

                function v() {
                    var y = s.widgetContainer[w.providerId + "stepNumber" + x];
                    if (t) {
                        i(s.containerSelector).html(y).show();
                    } else {
                        i(s.containerSelector).hide().html(y);
                    }
                    s.stepsScripts[x]();
                }

                function u() {
                    s.showLoaderWidget();
                    i.when(s.steps[x](w)).then(function() {
                        v();
                        s.hideLoaderWidget();
                        if (x == 1) {
                            s.hideLoader();
                        }
                    });
                }
                i.when(s.PreLoad(w)).then(function() {
                    u();
                });
            };
        }(f.zs || {}, f, h));
        f.zs.LoadInit();
    }
})(window.zs || {}, window);
